# -*- coding: utf-8 -*-
"""prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A8kCKa8G7vcy2vHHeFlC5TCIudu2T4vE
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing import image
from PIL import Image
from google.colab import files

# Step 1: Load the trained model
model = tf.keras.models.load_model("digit_recognition_model.h5")
print("âœ… Model loaded successfully!")

# Step 2: Upload an image (must be 28x28 or will be resized)
print("ðŸ“¤ Please upload a digit image (.png or .jpg):")
uploaded = files.upload()

# Step 3: Preprocess and predict
for file_name in uploaded.keys():
    # Load the image and convert to grayscale
    img = Image.open(file_name).convert('L')
    img = img.resize((28, 28))  # Resize to 28x28
    img_array = np.array(img)

    # Invert colors if background is white
    img_array = 255 - img_array

    # Normalize and reshape
    img_array = img_array.astype("float32") / 255.0
    img_array = img_array.reshape(1, 28, 28, 1)

    # Predict the digit
    prediction = model.predict(img_array)
    predicted_digit = np.argmax(prediction)

    # Show the image and prediction
    plt.imshow(img, cmap='gray')
    plt.title(f"Predicted Digit: {predicted_digit}")
    plt.axis('off')
    plt.show()

    print(f"âœ… Prediction complete: {predicted_digit}")